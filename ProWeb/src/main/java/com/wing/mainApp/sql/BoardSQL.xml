<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cboard">
<!-- FAQ 등록 질의(관리자) -->
	<insert id="faqinsert" parameterType="cbdata">
		INSERT
		INTO
			FAQ (FAQ_NO, QT_NO, mem_ID, FAQ_TITLE, FAQ_BODY)
		VALUES
			((SELECT NVL(MAX(FAQ_no),0) + 1 FROM FAQ),
			(SELECT QT_no FROM QType WHERE QT_no = #{qno}),
			#{id},#{title},#{body})
	</insert>
<!-- FAQ총 데이터 갯수 구하기 질의 -->
	<select id="gettotal" resultType="java.lang.Integer">
		SELECT
			COUNT(*)	AS		TOTAL
		FROM
			FAQ
		WHERE
			FAQ_isDeleted = 'N'
	</select>
<!-- FAQ 목록 보기 질의 -->
	<select id="faqselect"  resultType="cbdata">
		SELECT
			f.FAQ_no		AS		NO,
			f.FAQ_title 		AS		TITLE,
			f.QT_no			AS 	QNO,
			q.QT_name		AS		QNAME,
			f.FAQ_body 	AS 	BODY
		FROM
			FAQ f, QTYPE q
		WHERE
			f.FAQ_isDeleted= 'N'
			AND	f.QT_no = q.QT_no
		ORDER BY
			f.QT_no ASC
	</select>
<!--  FAQ상세보기 질의 -->
	<select id="faqview" resultType="cbdata" parameterType="java.lang.Integer">
		SELECT
			FAQ_no		AS 	NO,
   			mem_id		AS 	ID, 
   			FAQ_title		AS 	TITLE,
   			FAQ_body	AS 	BODY,
   			FAQ_cdate 	AS 	WDATE
		FROM
			FAQ
		WHERE
			FAQ_no = #{no}
			AND	FAQ_isdeleted = 'N'
	</select>
<!--  FAQ삭제 질의 -->
	<update id="faqdelete" parameterType="java.lang.Integer">
		UPDATE
			FAQ
		SET
			FAQ_isDeleted = 'Y'
		WHERE
			FAQ_no= #{no}
	</update> 
<!-- 	FAQ수정 질의 -->
	<update id="faqmodify" parameterType="cbdata">
		UPDATE
			FAQ
		SET
			FAQ_title = #{title},
			FAQ_body = #{body},
			FAQ_cdate = SYSDATE
		WHERE
			FAQ_no = #{no}
	</update>
<!--  QA_no 알아내는 질의 -->
	<select id="nosearch" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		SELECT
			NVL(MAX(QA_no), 0) +1	AS		NO
		FROM
			QA
	</select>
<!-- QA게시물 등록질의(사용자)  -->
	<insert id="qainsert" parameterType="cbdata">
		INSERT
		INTO
			QA<!--  (QA_no, mem_id, QT_no, QA_title, QA_body, QA_date, QA_isAnswer, QA_cDate, QA_isDeleted, QA_top, QA_mid, QA_bottom) -->
		VALUES
			((SELECT NVL(MAX(QA_no), 0) + 1 FROM QA),#{id},#{qno},#{title},#{body},SYSDATE,'N',SYSDATE,'N', #{top},#{mid},#{bottom})
	</insert>
<!-- QA총 데이터 갯수 구하기 질의 -->
	<select id="gettotals" resultType="java.lang.Integer">
		SELECT
			COUNT(*)	AS		TOTAL
		FROM
			QA
		WHERE
			QA_isDeleted = 'N'
	</select>
<!--  QA게시물 목록가져오기 질의 -->
	<select id="qaselect" resultType="cbdata">
		SELECT
			q.QA_no			AS		NO,
			t.QT_name		AS		QNAME,
   			q.mem_id		AS		ID,
   			q.QT_no			AS		QNO,
   			q.QA_title		AS		TITLE,
   			q.QA_body		AS		BODY,
   			q.QA_date		AS		WDATE,
   			q.QA_top		AS		TOP,
   			q.QA_mid		AS		MID,
   			q.QA_Bottom	AS		BOTTOM
		FROM
			QA q, QTYPE t
		WHERE
			q.QA_isDeleted = 'N'
			AND	t.QT_no = q.QT_no
		ORDER BY
			q.QA_top DESC, q.QA_bottom ASC
	</select>
<!--  QA상세보기 질의 -->
	<select id="qaview" resultType="cbdata" parameterType="java.lang.Integer">
		SELECT
			QA_no		AS 	NO,
   			mem_id		AS 	ID, 
   			QA_title		AS 	TITLE,
   			QA_body	AS 	BODY,
   			QA_date 	AS 	WDATE,
   			QA_top		AS		TOP,
   			QA_mid		AS		MID,
   			QA_Bottom	AS		BOTTOM
		FROM
			QA
		WHERE
			QA_no = #{no}
	</select>
<!--  QA답글 달기 질의 -->
	<update id="qareple" parameterType="cbdata">
		UPDATE
			QA
		SET
			QA_bottom = QA_bottom + 1
		WHERE
				QA_top = #{no}
		AND	QA_bottom >= #{bottom}
	</update>
<!-- QA 검색데이터 갯수 구하기 질의 -->
	<select id="searchcount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		SELECT
			COUNT(*)		AS CNT
		FROM
			QA
		WHERE
			<if test="kind == 'title'">
				QA_title LIKE '%' || #{CONTENT} || '%'
			</if>
			<if test="kind == 'writer'">
				mem_id LIKE '%' || #{CONTENT} || '%'
			</if>
			<if test="kind == 'both'">
				QA_title LIKE '%' || #{CONTENT} || '%' OR mem_id LIKE '%' || #{CONTENT} || '%'
			</if>
	</select>
<!-- QA검색 질의 -->
	<select id="searchboard" resultType="cbdata" parameterType="java.util.HashMap">
		SELECT
			QA_no		AS		NO,
   			mem_id		AS		ID,
   			QT_no		AS		QNO,
   			QA_title		AS		TITLE,
   			QA_body	AS		BODY,
   			QA_date		AS		WDATE
		FROM
			QA
		WHERE
					QA_isDeleted = 'N'
			<choose>
				<when test="kind eq 'title'">
					AND	QA_title LIKE '%' || #{CONTENT} || '%'
				</when>  
				<when test="kind eq 'writer'">
					AND	mem_id LIKE '%' || #{CONTENT} || '%'
				</when> 
				<otherwise>
					AND	(QA_title LIKE '%' || #{CONTENT} || '%' OR mem_id LIKE '%' || #{CONTENT} || '%')
				</otherwise>
			</choose>
		ORDER BY
			QA_NO DESC
	</select>
<!--  QA삭제 질의 -->
	<update id="qadelete" parameterType="cbdata">
		UPDATE
			QA
		SET
			QA_isDeleted = 'Y'
		WHERE
			QA_top= #{top}
	</update>
<!-- 	QA수정 질의 -->
	<update id="qamodify" parameterType="cbdata">
		UPDATE
			QA
		SET
			QA_title = #{title},
			QA_body = #{body},
			QA_date = SYSDATE
		WHERE
			QA_no = #{no}
	</update>
</mapper> 