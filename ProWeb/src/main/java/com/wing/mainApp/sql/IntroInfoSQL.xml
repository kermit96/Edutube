<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="intromanager">

	<!-- 03/18 (이 주석이 있어야 완료 된것 -->
	 
<!-- 	게시물 등록하기 -->
	<insert		id="insertIntroInfo"	parameterType="idata">
		INSERT
		INTO
			Introduce
		VALUES
			((SELECT NVL(MAX(intro_no), 0) + 1 FROM Introduce),
			#{mem_id}, #{intro_title}, #{intro_body},SYSDATE,#{gimg2},'test','tt','10',SYSDATE,'N',0)
	</insert>
<!-- 	강사 소개글  질의	-->
	<select id="selectIntroList"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			intro_no,
			mem_id,
			mem_nick,
			intro_title,
			intro_body,
			intro_path AS gimg2  
		FROM
			(SELECT
				rownum AS RNO, t2.*
			FROM
				(SELECT i.*,m.mem_nick as mem_nick FROM introduce i,member m
			WHERE 
				i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N'
			ORDER BY i.intro_no DESC) t2
			)	
		WHERE
		RNO BETWEEN #{start} AND #{end}			
	</select>
<!-- 언어 소개글 질의 -->
<select id="selectkorlang"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'langkor') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N'
	<!--    mem_id = (select mem_id from lecturer where sub_code like 'langkor')  -->	
	</select>
<select id="selectenglang"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'langeng') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N'
	<!--    mem_id = (select mem_id from lecturer where sub_code like 'langkor')  -->	
	</select>
<select id="selectjaplang"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'langjap') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N' 
	<!--    mem_id = (select mem_id from lecturer where sub_code like 'langjap')  -->	
	</select>
<select id="selectchnlang"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'langchn') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N' 
	<!--    mem_id = (select mem_id from lecturer where sub_code like 'langchn')  -->	
</select>
<select id="selectclang"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'progclang') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N'  	
	</select>
	<select id="selectjavalang"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'progjava') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N' 
	</select>
	<select id="selectphplang"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'progphp') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N'  
	</select>
	<select id="selectcookkor"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'cookkor') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N' 
	</select>
	<select id="selectcookjap"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'cookjap') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N' 
	</select>
	<select id="selectcookchn"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'cookchn') l,introduce i,member m				
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N'  
	</select>
	<select id="selectcookwest"		resultType="idata"
										parameterType="java.util.HashMap">
		SELECT
			i.intro_no,
			i.mem_id,
			m.mem_nick,
			i.intro_title,
			i.intro_body,
			i.intro_path AS gimg2  
		FROM
		    (select * from lecturer where sub_code like 'cookwest') l,introduce i,member m			
		where l.mem_id = i.mem_id AND i.mem_id=m.mem_id AND i.intro_IsDeleted='N' AND m.mem_IsDeleted='N'  
	</select>
		
<!-- 	총 데이터 개수 구하기 질의 -->	
	<!-- 	지금 등록할 게시물의 일련번호를 알아내기 -->
	<select id="selectMax"	resultType="java.lang.Integer">
		SELECT
			NVL(MAX(intro_no), 0) + 1		AS NO
		FROM
		Introduce	
	</select>
<!-- 	총 데이터 개수 구하기 질의 -->	
	<select id="getTotal" resultType="java.lang.Integer">
		SELECT
			COUNT(*) AS TOTAL
		FROM
			(SELECT * FROM lecturer l,introduce i
			 WHERE lec_IsDeleted='N' AND intro_IsDeleted='N' AND l.mem_id=i.mem_id)
					
	</select>
	<!-- 	게시물 상세보기 질의 -->
	<select id="introview" resultType="idata" parameterType="java.util.HashMap">
        SELECT
            intro_no,
            intro_path AS gimg2, 
            i.mem_id AS mem_id, 
            m.mem_nick AS mem_nick,
            intro_title,
            intro_body,
            intro_date,            
            intro_cdate,
            intro_good AS good            
        FROM
            Introduce i,member m
        WHERE 
            intro_no =#{NO}
        AND
            i.mem_id = m.mem_id      		
	</select>
<select id="isupdate" resultType="java.lang.Integer" 
												parameterType="java.util.HashMap">
		SELECT
			COUNT(*) AS CNT
		FROM
			Introduce
		WHERE
					intro_no = #{NO}
	<!-- 	AND	rb_Password = #{PW} -->	
	</select>
<!-- 	게시물 수정 질의(그림 파일 포함) -->
	<update id="updateintrophoto" parameterType="idata">
		UPDATE
			Introduce
		SET
			intro_title = #{intro_title},
			intro_body = #{intro_body},
			intro_path = #{gimg2}, 
			intro_cDate = SYSDATE
						
		WHERE
			intro_no = #{intro_no}
	</update>
<!-- 	게시물 수정 질의(그림 파일 미포함) -->
	<update id="updateintro" parameterType="idata">
		UPDATE
			Introduce
		SET
			intro_title = #{intro_title},
			intro_body = #{intro_body},
			intro_cDate = SYSDATE
						
		WHERE
			intro_no = #{intro_no}
	</update>
<!-- 	게시물 삭제 질의 -->
	<update id="deleteintro"	parameterType="java.lang.Integer">
		UPDATE
			Introduce
		SET
			intro_isDeleted = 'Y'
		WHERE
			intro_no = #{NO}
	</update>

<!-- 	게시물 댓글 추천 증가 질의 -->
<!-- 	검색 데이터 개수 구하기 질의 -->
	<select id="searchcount" resultType="java.lang.Integer" 
								parameterType="java.util.HashMap">
		SELECT
			COUNT(*) AS CNT
		FROM
			introduce i,member m,lecturer l
		WHERE
			i.intro_isDeleted = 'N'
			AND l.lec_isDeleted = 'N'
			AND m.mem_id=i.mem_id
			AND i.mem_id=l.mem_id
			AND
			<if test="kind eq 'title'">
				i.intro_title LIKE '%' || #{CONTENT} || '%'
			</if>
	 		<if test="kind eq 'body'">
				i.intro_body LIKE '%' || #{CONTENT} || '%'
			</if>
			<if test="kind eq 'mem_nick'">
				m.mem_nick LIKE '%' || #{CONTENT} || '%'
			</if>
			<if test="kind eq 'both'">
				i.intro_title LIKE '%' || #{CONTENT} || '%' OR i.intro_body LIKE '%' || #{CONTENT} || '%'
			</if>
	</select>
<!-- 	 검색 데이터 구하기 질의 -->	
	<select id="searchintro"	resultType="idata" 
									parameterType="java.util.HashMap">
		SELECT
			intro_no,
			intro_path AS gimg2, 
			Introduce.mem_id,
			m.mem_nick,
			intro_title,
			intro_body,
			intro_date		
		FROM
			Introduce,member m,lecturer l
		WHERE
			intro_isDeleted = 'N'
			AND m.mem_isDeleted = 'N'
			AND l.lec_isDeleted = 'N'
			AND Introduce.mem_id = m.mem_id
			AND Introduce.mem_id = l.mem_id
			<choose>
				<when test="kind eq 'title'">
			AND	intro_title LIKE '%' || #{CONTENT} || '%'
				</when>
				<when test="kind eq 'body'">
			AND	intro_body LIKE '%' || #{CONTENT} || '%'
				</when>
				<when test="kind eq 'mem_nick'">
			AND	m.mem_nick LIKE '%' || #{CONTENT} || '%'
				</when>
				<otherwise>
			AND	(intro_title LIKE '%' || #{CONTENT} || '%' OR intro_body LIKE '%' || #{CONTENT} || '%') 					
				</otherwise>
			</choose>
		ORDER BY
			intro_no DESC
	</select>
	
	<!-- 좋아요 SQL -->
		<!--  추천강사 검색 -->
	<select id="shownogood" resultType="Hmap" parameterType="String">
		select
			mem_ID as ID,
			lg_list as SHOWNO
		From
			lecGood
		where
			mem_ID=#{ID}	
	</select>
	
	<!--  추천강사번호 업데이트 -->
	<update id="updateshownogood" parameterType="Hmap">
		UPDATE
			lecGood
		SET		
			lg_list = #{NO}
		WHERE
			mem_ID=#{ID}
	</update>
	
	<!--  최초로 본글이면 삽입 -->
	<insert id ="insertshownogood" parameterType="Hmap">
		INSERT
		INTO
			lecGood
		Values
			(#{ID},#{NO})		
	</insert>
	
	<!--  실제로 추천수 증가 -->
	<update id="updategood" parameterType="int">
			UPDATE
			introduce
		SET
			intro_good = intro_good + 1
		WHERE
			intro_no = #{NO}
	</update>	
	
	<select id="selectGood" parameterType="int" resultType="int">
		SELECT
			intro_good
		From
			introduce
		Where
			intro_no=#{NO}		
	</select>
	
	<!--  좋아요 SQL 끝 -->
	<!-- 03/18 (이 주석이 있어야 완료 된것 -->
	   <select id="getgood" resultType="idata" parameterType="java.util.HashMap"> 
       SELECT * from    
    (SELECT
        m.mem_nick AS mem_nick , 
        intro_path AS gimg2,
        intro_good   AS good
    FROM
        introduce i,member m
    where
        i.mem_id = m.mem_id     
   ORDER BY good DESC)
   where   
   rownum <![CDATA[<]]>= 3
   </select>
	
</mapper>
